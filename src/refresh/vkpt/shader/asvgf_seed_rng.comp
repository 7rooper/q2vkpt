/*
Copyright (C) 2018 Christoph Schied

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

#define GLOBAL_UBO_DESC_SET_IDX 0
#include "global_ubo.h"

#define GLOBAL_TEXTURES_DESC_SET_IDX 1
#include "global_textures.h"

void
main()
{
	ivec2 ipos = ivec2(gl_GlobalInvocationID);
	int frame_num = global_ubo.current_frame_idx;
	
	uint rng_seed = 0;

	rng_seed |= (uint(ipos.x) % BLUE_NOISE_RES)  <<  0u;
	rng_seed |= (uint(ipos.y) % BLUE_NOISE_RES)  << 10u;
	rng_seed |= uint(frame_num) << 20;

	if((global_ubo.current_frame_idx & 1) == 0)
		imageStore(IMG_ASVGF_RNG_SEED_A, ipos, uvec4(rng_seed));
	else
		imageStore(IMG_ASVGF_RNG_SEED_B, ipos, uvec4(rng_seed));
}
